#!/usr/bin/python
#
# Script to control DOOYA blinds
#
# Paul McGowan 2021
#
import sys
import json
import socket
import random
import datetime

# Add the names of your blinds here together with
# the other required data
blinds = ["dining","patio","bedroom","study","ella"]
server = ("+++IP OF HUB+++", 32100)
token = "+++ACCESS TOKEN FROM KEYGEN+++"
mac = "+++MAC FROM DISCOVER+++"

# Quick check routine to ensure blind name exists
# and control % is between 0 and 100
def sanityCheck():
   if blind == "0000":
      print ("Unknown blind name "+bln)
      exit(0)
   if data <> "operation":
      if command.isdigit() == True:
         pct = int(command)
         if pct < 0 or pct > 100:
            print ("Blind movement must be between 0 and 100")
            exit(0)
      else:
         print ("Blind movement must be numeric and between 0 and 100")
         exit(0)

# If we havent entered enough commands, display the usage
if len(sys.argv) <> 3:
   print ("blind [name] [open/close/up/down/stop/halt/query/status/0-100]")
   exit(0)

# Get the blind name and command/percentage
bln = sys.argv[1]
command = sys.argv[2]

buffer = 1024
blind = "0000"
operation = command
data = "targetPosition"

# This is used to generate the msgID
# It consists of the timestamp and 3 extra characters
# we just generate 3 random numbers for now
rn = str(random.randint(100,159))
t = datetime.datetime.now()
id = t.strftime("%Y")+t.strftime("%m")+t.strftime("%d")+t.strftime("%H")+t.strftime("%M")+t.strftime("%S")+rn

# Use the command to generate the operation code 0,1,2,5
cmds = ["close","down","open","up","stop","halt","status","query"]
ops = ["0","0","1","1","2","2","5","5"]
c = 0
for x in cmds:
   if command == x:
      operation = ops[c]
      data = "operation"
   c += 1

# Assign the blind number
# First blind in list is 0001
c = 0
for x in blinds:
   c += 1
   if bln == x:
      blind = "000" + str(c)

sanityCheck()

# Build the JSON data to send to the hub
Payload = str.encode('{"msgType":"WriteDevice",\
                        "mac":"'+mac+''+blind+'",\
                        "DeviceType":"10000000",\
                        "AccessToken":"'+token+'",\
                        "msgID":"'+id+'",\
                        "data":{"'+data+'":'+operation+'}\
                      }')

# Send the data and read back the response
UDPClientSocket = socket.socket(family=socket.AF_INET, type=socket.SOCK_DGRAM)
UDPClientSocket.sendto(Payload, server)
response = UDPClientSocket.recvfrom(buffer)
data = json.loads(json.dumps(json.loads(format(response[0])), indent=4, sort_keys=True))

# Print out some response data
batLevel = (data["data"]["batteryLevel"])
batPC = int(100*float(batLevel)/1200)
print ("Battery "+str(batPC)+"%")
print ("Blind position "+str((data["data"]["currentPosition"]))+"%")
if command == "stop" or command == "halt":
   print ("Blind movement halted")
   exit(0)
if command <> "status":
   if command == "open" or command == "up":
      command = "0"
   if command == "close" or command == "down":
      command = "100"
   print ("New position "+command+"%")
